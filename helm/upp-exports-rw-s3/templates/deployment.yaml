apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: APP_SYSTEM_CODE
          value: {{ .Values.env.APP_SYSTEM_CODE }}
        - name: APP_PORT
          value: "8080"
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: upp-exports-s3.region
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: {{ .Values.bucket.key }}
        - name: BUCKET_CONTENT_PREFIX
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: upp-exports-s3.content.prefix
        - name: BUCKET_CONCEPT_PREFIX
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: upp-exports-s3.concept.prefix
        - name: CONTENT_RESOURCE_PATH
          value: "{{ .Values.content.path }}"
        - name: CONCEPT_RESOURCE_PATH
          value: "{{ .Values.concept.path }}"
        - name: PRESIGN_TTL
          value: "{{ .Values.presignTTL.seconds }}"
        ports:
        - containerPort: 8080
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8080
        readinessProbe:
          httpGet:
            path: /__gtg
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        resources:
{{ toYaml .Values.resources | indent 12 }}
