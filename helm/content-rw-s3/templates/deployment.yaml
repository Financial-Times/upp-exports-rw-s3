apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: APP_PORT
          value: "8080"
        - name: GRAPHITE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: graphite.address
        - name: GRAPHITE_PREFIX
          value: "coco.services.k8s.{{ .Values.service.name }}"
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: aws.region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.secret_access_key
        - name: BUCKET_NAME
          value: "{{ .Values.env.bucket.name }}"
        - name: CONCEPT_RESOURCE_PATH
          value: "{{ .Values.env.concept.resource.path }}"
        - name: CONTENT_RESOURCE_PATH
          value: "{{ .Values.env.content.resource.path }}"
        - name: BUCKET_CONTENT_PREFIX
          value: "{{ .Values.env.bucket.content.prefix }}"
        - name: BUCKET_CONCEPT_PREFIX
          value: "{{ .Values.env.bucket.concept.prefix }}"
        - name: LOG_METRICS
          value: "{{ .Values.env.log.metrics }}"
{{ toYaml .Values.env | indent 8 }}
        ports:
        - containerPort: 8080
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8080
        readinessProbe:
          httpGet:
            path: /__gtg
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        resources:
{{ toYaml .Values.resources | indent 12 }}
